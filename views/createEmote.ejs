<form id="emoteForm" enctype="multipart/form-data">
    <div class="form-group row">
        <label class="form-control-label col-sm-2" for="key">Unique Key</label>
        <div class="col-sm-8">
            <input type="text" class="form-control" id="key" placeholder="GangstaEmote" pattern="[A-Za-z0-9]+" required autofocus>
            <small id="keyHelp" class="form-control-label">Emote id/filename and item stringkey/icon, alpha-numeric with no spaces</small>
            <small id="keyErr" class="form-control-label"></small>
        </div>
    </div>
    <div class="form-group row">
        <label class="form-control-label col-sm-2" for="alias">Emote alias</label>
        <div class="col-sm-8">
            <input type="text" class="form-control" id="alias" placeholder=":)" required>
            <small id="aliasHelp" class="form-control-label">Emote key map</small>
            <small id="aliasErr" class="form-control-label"></small>
        </div>
    </div>
    <div class="form-group row">
        <label class="col-sm-2">Options</label>
        <div class="col-sm-8">
            <div class="checkbox">
                <label class="checkbox-inline">
                    <input id="animated" type="checkbox" value="animated">
                    Animated
                </label>
            </div>
            <div class="checkbox">
                <label class="checkbox-inline">
                    <input id="premium" type="checkbox" value="premium">
                    Premium (Requires creation of Emote item)
                </label>
            </div>
        </div>
    </div>
    <div class="form-group row">
        <label class="form-control-label col-sm-2" for="emoteImg">Emote Image</label>
        <div class="col-sm-8">
            <input type="file" class="form-control-file" id="emoteImg" required>
            <img id='emoteImgPreview' src='#' width='30px' hidden>
            <small id="emoteImgErr" class="form-control-label"></small>
        </div>
    </div>

    <fieldset id="premium-item-data" hidden>
        <legend>Emote Item Properties</legend>
        <div class="form-group row">
            <label class="form-control-label col-sm-2" for="name">Item Name</label>
            <div class="col-sm-8">
                <input type="text" class="form-control" id="name" placeholder="Gangsta Emote" pattern="[A-Za-z0-9\s]+">
                <small id="nameHelp" class="form-control-label">Item name can contain alpha-numeric with spaces</small>
                <small id="nameErr" class="form-control-label"></small>
            </div>
        </div>
        <div class="form-group row">
            <label class="form-control-label col-sm-2" for="sellPrice">Sell Price</label>
            <div class="col-sm-8">
                <input type="text" class="form-control" id="sellPrice" value="1000000">
            </div>
        </div>
        <div class="form-group row">
            <label class="form-control-label col-sm-2" for="vcPrice">VC Price</label>
            <div class="col-sm-8">
                <input type="text" class="form-control" id="vcPrice" placeholder="vc buy price">
            </div>
        </div>
        <div class="form-group row">
            <label class="form-control-label col-sm-2" for="itemImg">Item Image</label>
            <div class="col-sm-8">
                <input type="file" class="form-control-file" id="itemImg">
                <img id='itemImgPreview' src='#' width='30px' hidden>
                <small id="itemImgErr" class="form-control-label"></small>
            </div>
        </div>
    </fieldset>

    <button type="input" class="btn btn-primary-outline">Submit</button>
    <button type="input" class="cancelEmote btn btn-secondary">Cancel</button>
</form>

<script type="text/javascript">
    $(document).ready(function() {
        $('#premium').click(function() {
            if ($(this).is(':checked')) {
                $('#premium-item-data').prop('hidden', false);
                $('#name').prop('required', true);
                $('#itemImg').prop('required', true);
            } else {
                $('#premium-item-data').prop('hidden', true);
                $('#name').prop('required', false);
                $('#itemImg').prop('required', false);
            }
        });

        $('input').change(function() {
            var id = $(this).prop('id');
            $('#'+id+'Err').prop('hidden', true);
            $(this).parent().parent().removeClass('has-danger');
        });
        $('#emoteImg').change(function() {
            readURL(this, $('#emoteImgPreview'));
        });
        $('#itemImg').change(function() {
            readURL(this, $('#itemImgPreview'));
        });
        $("#emoteForm").submit(function() {
            $("#emoteForm>div.has-danger").removeClass("has-danger");
            $("#emoteForm>small").prop('hidden', true);
            uploadNow();

            return false;
        });
        $(".cancelEmote").click(function(e) {
            // cancel default behavior
            e.preventDefault();

            $('.body').load('/1/emotes');
            return false;
        });

        function readURL(input, target) {
            if (input.files && input.files[0]) {
                // var emoteFilename = input.files[0].name.replace(/.[\w]{3}$/, '');
                var reader = new FileReader();
                reader.onload = function (e) {
                    target.attr('src', e.target.result).prop('hidden', false);
                }
                reader.readAsDataURL(input.files[0]);
            }
        }

        function uploadNow() {
            // build the form data
            var formData = new FormData();
            formData.append('key', $('#key').val());
            formData.append('alias', $('#alias').val());
            formData.append('animated', $('#animated').is(':checked'));
            formData.append('premium', $('#premium').is(':checked'));
            formData.append('emoteImg', $('#emoteImg')[0].files[0]);
            if ($('#premium').is(':checked')) {
                formData.append('name', $('#name').val());
                formData.append('sellPrice', $('#sellPrice').val());
                formData.append('vcPrice', $('#vcPrice').val());
                formData.append('itemImg', $('#itemImg')[0].files[0]);
            }
            $.ajax({
                method:'POST',
                url: '/1/emotes',
                data: formData,
                success: function(result, status, xhr) {
                    $('.body').load('/1/emotes');
                    $('.alert').removeClass('alert-danger').addClass('alert-success').html('<strong>Emoticon has been created</strong>').prop('hidden', false);
                    setTimeout(function() {
//                        $('.alert').animate({
//                            height: 'hide'
//                        });
                        $('.alert').prop('hidden', true);
                    }, 3000);
                },
                error: function(xhr, status, error) {
                    $('.alert').removeClass('alert-success').addClass('alert-danger').html('<strong>Please fix following errors</strong>').prop('hidden', false);

                    var code = xhr.status;
                    if (code == 500) {
                        $('.modal-body').html(xhr.responseText);
                        $('#errModal').modal();
                    } else {
                        var response = xhr.responseJSON;
                        for (var key in response) {
                            $('#'+key).parent().parent().addClass('has-danger');
                            if (typeof response[key] != 'boolean')
                                $('#'+key+'Err').html(response[key]).prop('hidden', false);
                        }
                    }
                },
                contentType: false,
                processData: false,
                dataType: 'json'
            });
        }
    });
</script>
